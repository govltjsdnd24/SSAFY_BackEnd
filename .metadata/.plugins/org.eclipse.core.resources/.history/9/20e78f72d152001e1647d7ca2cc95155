package edu.repository;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import edu.etc.DBUtil;
import edu.vo.Board;

public class BoardDAO {
	//singleton pattern
	private static BoardDAO instance= new BoardDAO();
	private BoardDAO() {};
	public static BoardDAO getInstance() {
		return instance;
	}
	
	DBUtil dbu= DBUtil.getInstance();
	public void boardInsert(Board b) throws SQLException{
		Connection conn= dbu.getConnection();
		PreparedStatement pstmt = null;
//		TODO : boardDto의 내용을 board table에 insert 하세요!!!
		DBUtil dbu=DBUtil.getInstance();
		try {
			conn=dbu.getConnection();
			StringBuffer sb= new StringBuffer();
			sb.append("insert into board(article_no,user_id, subject ,content,hit,register_time) \n");
			sb.append(" values (?,?,?,?,?,?) "); 
			pstmt = conn.prepareStatement(sb.toString());
			pstmt.setString(1, b.getArticleNo());
			pstmt.setString(2, b.getUsername());
			pstmt.setString(3, b.getSubject());
			pstmt.setString(4, b.getContent());
			pstmt.setString(5, b.getHit());
			pstmt.setString(6, b.getRegisterTime());
			pstmt.executeUpdate();
		}
		catch (SQLException e) {
			e.printStackTrace();
		} finally {
			dbu.close(pstmt);
			dbu.close(conn);
		}
//		END
	}
	
	public List<Board> boardList() throws SQLException {
		List<Board> list = new ArrayList<Board>();

		DBUtil dbu=DBUtil.getInstance();
		Connection connection=null;
		ResultSet rs= null;
		try {
			connection=dbu.getConnection();
			StringBuffer sb = new StringBuffer();
			sb.append("select * from  board \n");
			Statement statement= connection.createStatement();
			rs =statement.executeQuery(sb.toString());
			while(rs.next()) {
				Board bd=new Board(rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4));
				list.add(bd);
			}
		} catch (SQLException e) {
			try {
				connection.rollback();
			} catch (SQLException e1) {
				System.out.println("rollback Error");
			}
		} finally {
			dbu.close(rs);
			dbu.close(connection);
		}
//		END
		return list;
		
//		Connection conn= dbu.getConnection();
//		
//		return null;
	}
}
